# This is a basic workflow to help you get started with Actions

name: Build
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Build
        run: |
          sudo apt-get -y install ninja-build
          
          git clone https://github.com/emscripten-core/emsdk --depth 1
          cd emsdk
          ./emsdk install latest
          ./emsdk activate latest
          source ./emsdk_env.sh
          cd ..
          
          git clone https://github.com/llvm/llvm-project --depth 1
          cd llvm-project
          cmake -G Ninja -S llvm -B build-host \
            -DCMAKE_BUILD_TYPE=Release \
            -DLLVM_ENABLE_PROJECTS=clang
          cmake --build build-host --target clang-tblgen llvm-tblgen
          
          CXXFLAGS="-Dwait4=__syscall_wait4 -O3" \
          LDFLAGS="-s NO_ASSERTIONS -s NO_INVOKE_RUN -s EXIT_RUNTIME -s ALLOW_MEMORY_GROWTH -s INITIAL_MEMORY=64MB -s MODULARIZE -s EXPORT_ES6 -s EXPORTED_RUNTIME_METHODS=["callMain","FS"]" \
          emcmake cmake -G Ninja -S llvm -B build \
          -DCMAKE_BUILD_TYPE=Release \
          -DCMAKE_CROSSCOMPILING=True \
          -DCMAKE_INSTALL_PREFIX=install \
          -DLLVM_ENABLE_THREADS=OFF \
          -DLLVM_DEFAULT_TARGET_TRIPLE=wasm32-wasi \
          -DLLVM_TARGET_ARCH=wasm32-emscripten \
          -DLLVM_BUILD_LLVM_DYLIB=OFF \
          -DLLVM_INCLUDE_TESTS=OFF \
          -DLLVM_TABLEGEN=$PWD/build-host/bin/llvm-tblgen
          cmake --build build --target llvm-dis
          
          cd build
          tar -czvf bin.tgz bin/
          
      - uses: actions/upload-artifact@v3
        with:
            name: bin
            path: llvm-project/build/bin.tgz
